<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.microservices</groupId>
	<artifactId>Neo4jWarehouseService</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Neo4jWarehouseService</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>11</java.version>
		<spring-cloud.version>2020.0.4</spring-cloud.version>
	</properties>
	<dependencies>
		<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-data-neo4j</artifactId>
	    <version>2.5.3</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.neo4j/neo4j-ogm-bolt-driver -->
		<dependency>
		    <groupId>org.neo4j</groupId>
		    <artifactId>neo4j-ogm-bolt-driver</artifactId>
		    <version>2.1.1</version>
		</dependency>
		
		<!--	to allow @webClient functionality to upgrade @RestTemplate which is the way to connect and transfer information between any 2 microservices -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		
		
    	<!-- SWAGGER /io.springfox/springfox-swagger-ui -->
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>2.9.2</version>
		</dependency>

		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>2.9.2</version>
		</dependency>
		<!-- to initialize Eureka client to be discovered by Eureka server -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	
	<repositories>
    <repository>
        <id>spring-snapshots</id>
        <name>Spring Snapshots</name>
        <url>https://repo.spring.io/libs-snapshot-local</url>
        <snapshots>
            <enabled>true</enabled>
        </snapshots>
        <releases>
            <enabled>false</enabled>
        </releases>
    </repository>
</repositories>

</project>



<!--	to allow JWT authorization process 
	<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
				
			to allow JWT authorization process
		<dependency>
    		<groupId>org.springframework.boot</groupId>
   			 <artifactId>spring-boot-starter-security</artifactId>
    		<version>2.5.6</version>
		</dependency> 
			to allow JWT authorization process 
		<dependency>
  		  	<groupId>io.jsonwebtoken</groupId>
  		  	<artifactId>jjwt</artifactId>
   			 <version>0.9.1</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
		    <version>2.0.2</version>
		</dependency>
		
		<dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>
            spring-cloud-starter-circuitbreaker-resilience4j
       </artifactId>
        <version>0.0.1.BUILD-SNAPSHOT</version>
    </dependency>
		
		<dependency>
   			 <groupId>org.springframework.boot</groupId>
   			 <artifactId>spring-boot-starter-actuator</artifactId>
    			<version>2.5.6</version>
		</dependency>

		<dependency>
    		<groupId>io.github.resilience4j</groupId>
    		<artifactId>resilience4j-core</artifactId>
    		<version>1.7.0</version>
		</dependency>
		<dependency>
    		<groupId>io.github.resilience4j</groupId>
    		<artifactId>resilience4j-spring-boot2</artifactId>
    		<version>1.7.0</version>
		</dependency>
		
		spring-cloud-starter-netflix-hystrix for circuit breaker operations for fallback methods creation
		<dependency>
   		 	<groupId>org.springframework.cloud</groupId>
    		<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
   			<version>2.2.9.RELEASE</version>
		</dependency>
		
		<dependency>
		    <groupId>io.github.resilience4j</groupId>
		    <artifactId>resilience4j-spring-boot2</artifactId>
		</dependency>
		<dependency>
   			 <groupId>org.springframework.boot</groupId>
   			 <artifactId>spring-boot-starter-actuator</artifactId>
    			<version>2.5.6</version>
		</dependency>
		-->
		
		